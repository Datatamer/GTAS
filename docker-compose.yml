version: "3.4"

services:
  kibana:
    image: kibana:6.5.4
    container_name: kibana
    ports:
      - 5601:5601
    networks: 
      - gtas_default
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:6.5.4
    container_name: elasticsearch
    networks: 
      - gtas_default
    ports: 
      - 9300:9300
      - 9200:9200
    healthcheck:
      test: curl --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
  # logstash:
  #   image: logstash:6.5.4
  #   container_name: logstash
  #   command: logstash -f /config/
  #   environment:
  #     - JAVA_OPTS=-Xms1g -Xmx1g
  #   volumes:
  #     - $PWD/gtas-parent/scripts/elastic/install/docker/logstash/config:/config
  #   networks:
  #     - gtas_default
  #   depends_on:
  #     - elasticsearch
  #     - mariahost
  activemq:
    image: rmohr/activemq
    container_name: activemq
    ports:
      - 61616:61616
      - 8161:8161
    networks: 
      - gtas_default

  mariahost:
    build:
      context: ./docker
      dockerfile: db.Dockerfile
    ports:
      - "3306:3306"
    container_name: mariahost
    volumes: 
      - db-data:/var/lib/mysql
    command: [
            '--wait_timeout=28800',
        ]
    networks: 
      - gtas_default

  webapp:
    container_name: webapp
    build:
      context: .
      dockerfile: ./gtas-parent/gtas-webapp/Dockerfile
      args: 
        DB_HOST: 'localhost'
        REDIS_HOST: 'redis'
    ports:
      - "8080:8080"
    depends_on: 
      - mariahost
      - elasticsearch
      - kibana
    volumes: 
      - data:/root/.m2
    networks:
      - gtas_default

  scheduler:
    container_name: scheduler
    build:
      context: .
      dockerfile: ./gtas-parent/gtas-job-scheduler-war/Dockerfile
    environment:
      LOCAL_DRIVE_MAPPING_INPUT: ${LOCAL_DRIVE_MAPPING_INPUT}
      LOCAL_DRIVE_MAPPING_OUTPUT: ${LOCAL_DRIVE_MAPPING_OUTPUT}
    volumes:
      - ${LOCAL_DRIVE_MAPPING_INPUT}:/usr/local/input:rw
      - ${LOCAL_DRIVE_MAPPING_OUTPUT}:/usr/local/output:rw
      - data:/root/.m2
    networks:
      - gtas_default
    depends_on: 
      - mariahost
      - activemq

volumes:
  es-data:
    driver: local
  db-data:
    driver: local
  data:
    driver: local
  
networks:
  gtas_default: